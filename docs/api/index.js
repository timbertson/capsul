Index.PACKAGES = {"net" : [], "net.gfxmonk" : [], "net.gfxmonk.sequentialstate" : [{"name" : "net.gfxmonk.sequentialstate.EnqueueableTask", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "net\/gfxmonk\/sequentialstate\/EnqueueableTask.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "net\/gfxmonk\/sequentialstate\/EnqueueableTask.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "net\/gfxmonk\/sequentialstate\/EnqueueableTask.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "net\/gfxmonk\/sequentialstate\/EnqueueableTask.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "net\/gfxmonk\/sequentialstate\/EnqueueableTask.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "net\/gfxmonk\/sequentialstate\/EnqueueableTask.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "net\/gfxmonk\/sequentialstate\/EnqueueableTask.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/EnqueueableTask.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/EnqueueableTask.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/EnqueueableTask.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "net\/gfxmonk\/sequentialstate\/EnqueueableTask.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "net\/gfxmonk\/sequentialstate\/EnqueueableTask.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "net\/gfxmonk\/sequentialstate\/EnqueueableTask.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "net\/gfxmonk\/sequentialstate\/EnqueueableTask.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "net\/gfxmonk\/sequentialstate\/EnqueueableTask.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "net\/gfxmonk\/sequentialstate\/EnqueueableTask.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "net\/gfxmonk\/sequentialstate\/EnqueueableTask.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "net\/gfxmonk\/sequentialstate\/EnqueueableTask.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "net\/gfxmonk\/sequentialstate\/EnqueueableTask.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "run", "tail" : "(): Option[Future[_]]", "member" : "net.gfxmonk.sequentialstate.EnqueueableTask.run", "link" : "net\/gfxmonk\/sequentialstate\/EnqueueableTask.html#run():Option[scala.concurrent.Future[_]]", "kind" : "abstract def"}, {"label" : "enqueuedAsync", "tail" : "(): Unit", "member" : "net.gfxmonk.sequentialstate.EnqueueableTask.enqueuedAsync", "link" : "net\/gfxmonk\/sequentialstate\/EnqueueableTask.html#enqueuedAsync():Unit", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "net\/gfxmonk\/sequentialstate\/EnqueueableTask.html", "kind" : "trait"}, {"name" : "net.gfxmonk.sequentialstate.Ref", "shortDescription" : "A wrapper for getting \/ setting state", "members_class" : [{"label" : "set", "tail" : "(updated: T): Unit", "member" : "net.gfxmonk.sequentialstate.Ref.set", "link" : "net\/gfxmonk\/sequentialstate\/Ref.html#set(updated:T):Unit", "kind" : "def"}, {"label" : "current", "tail" : "(): T", "member" : "net.gfxmonk.sequentialstate.Ref.current", "link" : "net\/gfxmonk\/sequentialstate\/Ref.html#current:T", "kind" : "def"}, {"member" : "net.gfxmonk.sequentialstate.Ref#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "net\/gfxmonk\/sequentialstate\/Ref.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "net\/gfxmonk\/sequentialstate\/Ref.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "net\/gfxmonk\/sequentialstate\/Ref.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "net\/gfxmonk\/sequentialstate\/Ref.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "net\/gfxmonk\/sequentialstate\/Ref.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "net\/gfxmonk\/sequentialstate\/Ref.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "net\/gfxmonk\/sequentialstate\/Ref.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/Ref.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/Ref.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/Ref.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "net\/gfxmonk\/sequentialstate\/Ref.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "net\/gfxmonk\/sequentialstate\/Ref.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "net\/gfxmonk\/sequentialstate\/Ref.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "net\/gfxmonk\/sequentialstate\/Ref.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "net\/gfxmonk\/sequentialstate\/Ref.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "net\/gfxmonk\/sequentialstate\/Ref.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "net\/gfxmonk\/sequentialstate\/Ref.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "net\/gfxmonk\/sequentialstate\/Ref.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "net\/gfxmonk\/sequentialstate\/Ref.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "net\/gfxmonk\/sequentialstate\/Ref.html", "kind" : "class"}, {"name" : "net.gfxmonk.sequentialstate.SequentialExecutor", "shortDescription" : "", "object" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor$.html", "members_class" : [{"label" : "workLoop", "tail" : ": WorkLoop", "member" : "net.gfxmonk.sequentialstate.SequentialExecutor.workLoop", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor.html#workLoop:SequentialExecutor.this.WorkLoop", "kind" : "val"}, {"label" : "WorkLoop", "tail" : "", "member" : "net.gfxmonk.sequentialstate.SequentialExecutor.WorkLoop", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor.html#WorkLoopextendsRunnable", "kind" : "trait"}, {"label" : "enqueue", "tail" : "(task: EnqueueableTask with HasEnqueuePromise[Future[R]] with HasResultPromise[R]): StagedFuture[R]", "member" : "net.gfxmonk.sequentialstate.SequentialExecutor.enqueue", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor.html#enqueue[R](task:net.gfxmonk.sequentialstate.EnqueueableTaskwithnet.gfxmonk.sequentialstate.UnitOfWork.HasEnqueuePromise[scala.concurrent.Future[R]]withnet.gfxmonk.sequentialstate.UnitOfWork.HasResultPromise[R]):net.gfxmonk.sequentialstate.StagedFuture[R]", "kind" : "def"}, {"label" : "enqueueOnly", "tail" : "(task: EnqueueableTask with HasEnqueuePromise[Unit]): Future[Unit]", "member" : "net.gfxmonk.sequentialstate.SequentialExecutor.enqueueOnly", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor.html#enqueueOnly[R](task:net.gfxmonk.sequentialstate.EnqueueableTaskwithnet.gfxmonk.sequentialstate.UnitOfWork.HasEnqueuePromise[Unit]):scala.concurrent.Future[Unit]", "kind" : "def"}, {"member" : "net.gfxmonk.sequentialstate.SequentialExecutor#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(bufLen: Int)(ec: ExecutionContext): SequentialExecutor", "member" : "net.gfxmonk.sequentialstate.SequentialExecutor.apply", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor$.html#apply(bufLen:Int)(implicitec:scala.concurrent.ExecutionContext):net.gfxmonk.sequentialstate.SequentialExecutor", "kind" : "def"}, {"label" : "defaultBufferSize", "tail" : ": Int", "member" : "net.gfxmonk.sequentialstate.SequentialExecutor.defaultBufferSize", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor$.html#defaultBufferSize:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "net\/gfxmonk\/sequentialstate\/SequentialExecutor.html", "kind" : "object"}, {"name" : "net.gfxmonk.sequentialstate.SequentialState", "shortDescription" : "", "object" : "net\/gfxmonk\/sequentialstate\/SequentialState$.html", "members_class" : [{"label" : "accessAsync", "tail" : "(fn: (T) ⇒ Future[R])(ec: ExecutionContext): StagedFuture[R]", "member" : "net.gfxmonk.sequentialstate.SequentialState.accessAsync", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#accessAsync[R](fn:T=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):net.gfxmonk.sequentialstate.StagedFuture[R]", "kind" : "def"}, {"label" : "accessStaged", "tail" : "(fn: (T) ⇒ StagedFuture[R])(ec: ExecutionContext): StagedFuture[R]", "member" : "net.gfxmonk.sequentialstate.SequentialState.accessStaged", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#accessStaged[R](fn:T=>net.gfxmonk.sequentialstate.StagedFuture[R])(implicitec:scala.concurrent.ExecutionContext):net.gfxmonk.sequentialstate.StagedFuture[R]", "kind" : "def"}, {"label" : "mutateAsync", "tail" : "(fn: (Ref[T]) ⇒ Future[R])(ec: ExecutionContext): StagedFuture[R]", "member" : "net.gfxmonk.sequentialstate.SequentialState.mutateAsync", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#mutateAsync[R](fn:net.gfxmonk.sequentialstate.Ref[T]=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):net.gfxmonk.sequentialstate.StagedFuture[R]", "kind" : "def"}, {"label" : "mutateStaged", "tail" : "(fn: (Ref[T]) ⇒ StagedFuture[R])(ec: ExecutionContext): StagedFuture[R]", "member" : "net.gfxmonk.sequentialstate.SequentialState.mutateStaged", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#mutateStaged[R](fn:net.gfxmonk.sequentialstate.Ref[T]=>net.gfxmonk.sequentialstate.StagedFuture[R])(implicitec:scala.concurrent.ExecutionContext):net.gfxmonk.sequentialstate.StagedFuture[R]", "kind" : "def"}, {"label" : "access", "tail" : "(fn: (T) ⇒ R): StagedFuture[R]", "member" : "net.gfxmonk.sequentialstate.SequentialState.access", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#access[R](fn:T=>R):net.gfxmonk.sequentialstate.StagedFuture[R]", "kind" : "def"}, {"label" : "transform", "tail" : "(fn: (T) ⇒ T): StagedFuture[T]", "member" : "net.gfxmonk.sequentialstate.SequentialState.transform", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#transform(fn:T=>T):net.gfxmonk.sequentialstate.StagedFuture[T]", "kind" : "def"}, {"label" : "mutate", "tail" : "(fn: (Ref[T]) ⇒ R): StagedFuture[R]", "member" : "net.gfxmonk.sequentialstate.SequentialState.mutate", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#mutate[R](fn:net.gfxmonk.sequentialstate.Ref[T]=>R):net.gfxmonk.sequentialstate.StagedFuture[R]", "kind" : "def"}, {"label" : "current", "tail" : "(): Future[T]", "member" : "net.gfxmonk.sequentialstate.SequentialState.current", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#current:scala.concurrent.Future[T]", "kind" : "def"}, {"label" : "sendAccessAsync", "tail" : "(fn: (T) ⇒ StagedFuture[A]): Future[Unit]", "member" : "net.gfxmonk.sequentialstate.SequentialState.sendAccessAsync", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#sendAccessAsync[A](fn:T=>net.gfxmonk.sequentialstate.StagedFuture[A]):scala.concurrent.Future[Unit]", "kind" : "def"}, {"label" : "sendAccessStaged", "tail" : "(fn: (T) ⇒ StagedFuture[A])(ec: ExecutionContext): Future[Unit]", "member" : "net.gfxmonk.sequentialstate.SequentialState.sendAccessStaged", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#sendAccessStaged[A](fn:T=>net.gfxmonk.sequentialstate.StagedFuture[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[Unit]", "kind" : "def"}, {"label" : "sendAccess", "tail" : "(fn: Function1[T, _]): Future[Unit]", "member" : "net.gfxmonk.sequentialstate.SequentialState.sendAccess", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#sendAccess(fn:Function1[T,_]):scala.concurrent.Future[Unit]", "kind" : "def"}, {"label" : "sendSet", "tail" : "(updated: T): Future[Unit]", "member" : "net.gfxmonk.sequentialstate.SequentialState.sendSet", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#sendSet(updated:T):scala.concurrent.Future[Unit]", "kind" : "def"}, {"label" : "sendTransform", "tail" : "(fn: (T) ⇒ T): Future[Unit]", "member" : "net.gfxmonk.sequentialstate.SequentialState.sendTransform", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#sendTransform(fn:T=>T):scala.concurrent.Future[Unit]", "kind" : "def"}, {"member" : "net.gfxmonk.sequentialstate.SequentialState#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(v: T, thread: SequentialExecutor)(ec: ExecutionContext): SequentialState[T]", "member" : "net.gfxmonk.sequentialstate.SequentialState.apply", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState$.html#apply[T](v:T,thread:net.gfxmonk.sequentialstate.SequentialExecutor)(implicitec:scala.concurrent.ExecutionContext):net.gfxmonk.sequentialstate.SequentialState[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(v: T, bufLen: Int)(ec: ExecutionContext): SequentialState[T]", "member" : "net.gfxmonk.sequentialstate.SequentialState.apply", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState$.html#apply[T](v:T,bufLen:Int)(implicitec:scala.concurrent.ExecutionContext):net.gfxmonk.sequentialstate.SequentialState[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(v: T)(ec: ExecutionContext): SequentialState[T]", "member" : "net.gfxmonk.sequentialstate.SequentialState.apply", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState$.html#apply[T](v:T)(implicitec:scala.concurrent.ExecutionContext):net.gfxmonk.sequentialstate.SequentialState[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "net\/gfxmonk\/sequentialstate\/SequentialState$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "net\/gfxmonk\/sequentialstate\/SequentialState.html", "kind" : "object"}, {"name" : "net.gfxmonk.sequentialstate.StagedFuture", "members_trait" : [{"label" : "andThen", "tail" : "(pf: PartialFunction[Try[T], U])(executor: ExecutionContext): Future[T]", "member" : "scala.concurrent.Future.andThen", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#andThen[U](pf:PartialFunction[scala.util.Try[T],U])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "def"}, {"label" : "mapTo", "tail" : "(tag: ClassTag[S]): Future[S]", "member" : "scala.concurrent.Future.mapTo", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#mapTo[S](implicittag:scala.reflect.ClassTag[S]):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "fallbackTo", "tail" : "(that: Future[U]): Future[U]", "member" : "scala.concurrent.Future.fallbackTo", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#fallbackTo[U>:T](that:scala.concurrent.Future[U]):scala.concurrent.Future[U]", "kind" : "def"}, {"label" : "zipWith", "tail" : "(that: Future[U])(f: (T, U) ⇒ R)(executor: ExecutionContext): Future[R]", "member" : "scala.concurrent.Future.zipWith", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#zipWith[U,R](that:scala.concurrent.Future[U])(f:(T,U)=>R)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Future[U]): Future[(T, U)]", "member" : "scala.concurrent.Future.zip", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#zip[U](that:scala.concurrent.Future[U]):scala.concurrent.Future[(T,U)]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(pf: PartialFunction[Throwable, Future[U]])(executor: ExecutionContext): Future[U]", "member" : "scala.concurrent.Future.recoverWith", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#recoverWith[U>:T](pf:PartialFunction[Throwable,scala.concurrent.Future[U]])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[U]", "kind" : "def"}, {"label" : "recover", "tail" : "(pf: PartialFunction[Throwable, U])(executor: ExecutionContext): Future[U]", "member" : "scala.concurrent.Future.recover", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#recover[U>:T](pf:PartialFunction[Throwable,U])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[U]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[T, S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.collect", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#collect[S](pf:PartialFunction[T,S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (T) ⇒ Boolean)(executor: ExecutionContext): Future[T]", "member" : "scala.concurrent.Future.withFilter", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#withFilter(p:T=>Boolean)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (T) ⇒ Boolean)(executor: ExecutionContext): Future[T]", "member" : "scala.concurrent.Future.filter", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#filter(p:T=>Boolean)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[T, Future[S]]): Future[S]", "member" : "scala.concurrent.Future.flatten", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#flatten[S](implicitev:<:<[T,scala.concurrent.Future[S]]):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (T) ⇒ Future[S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.flatMap", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#flatMap[S](f:T=>scala.concurrent.Future[S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) ⇒ S)(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.map", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#map[S](f:T=>S)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "transform", "tail" : "(s: (T) ⇒ S, f: (Throwable) ⇒ Throwable)(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.transform", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#transform[S](s:T=>S,f:Throwable=>Throwable)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (T) ⇒ U)(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.foreach", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#foreach[U](f:T=>U)(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "failed", "tail" : "(): Future[Throwable]", "member" : "scala.concurrent.Future.failed", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#failed:scala.concurrent.Future[Throwable]", "kind" : "def"}, {"label" : "onFailure", "tail" : "(pf: PartialFunction[Throwable, U])(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.onFailure", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#onFailure[U](pf:PartialFunction[Throwable,U])(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "onSuccess", "tail" : "(pf: PartialFunction[T, U])(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.onSuccess", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#onSuccess[U](pf:PartialFunction[T,U])(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "onAccept", "tail" : "(fn: (Future[T]) ⇒ U)(ex: ExecutionContext): Unit", "member" : "net.gfxmonk.sequentialstate.StagedFuture.onAccept", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#onAccept[U](fn:scala.concurrent.Future[T]=>U)(implicitex:scala.concurrent.ExecutionContext):Unit", "kind" : "abstract def"}, {"label" : "isAccepted", "tail" : "(): Boolean", "member" : "net.gfxmonk.sequentialstate.StagedFuture.isAccepted", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#isAccepted:Boolean", "kind" : "abstract def"}, {"label" : "accepted", "tail" : "(): Future[Future[T]]", "member" : "net.gfxmonk.sequentialstate.StagedFuture.accepted", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#accepted:scala.concurrent.Future[scala.concurrent.Future[T]]", "kind" : "abstract def"}, {"label" : "transformWith", "tail" : "(f: (Try[T]) ⇒ Future[S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.transformWith", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#transformWith[S](f:scala.util.Try[T]=>scala.concurrent.Future[S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "abstract def"}, {"label" : "transform", "tail" : "(f: (Try[T]) ⇒ Try[S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.transform", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#transform[S](f:scala.util.Try[T]=>scala.util.Try[S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "abstract def"}, {"label" : "value", "tail" : "(): Option[Try[T]]", "member" : "scala.concurrent.Future.value", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#value:Option[scala.util.Try[T]]", "kind" : "abstract def"}, {"label" : "isCompleted", "tail" : "(): Boolean", "member" : "scala.concurrent.Future.isCompleted", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#isCompleted:Boolean", "kind" : "abstract def"}, {"label" : "onComplete", "tail" : "(f: (Try[T]) ⇒ U)(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.onComplete", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#onComplete[U](f:scala.util.Try[T]=>U)(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "abstract def"}, {"label" : "result", "tail" : "(atMost: Duration)(permit: CanAwait): T", "member" : "scala.concurrent.Awaitable.result", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#result(atMost:scala.concurrent.duration.Duration)(implicitpermit:scala.concurrent.CanAwait):T", "kind" : "abstract def"}, {"label" : "ready", "tail" : "(atMost: Duration)(permit: CanAwait): StagedFuture.this.type", "member" : "scala.concurrent.Awaitable.ready", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html#ready(atMost:scala.concurrent.duration.Duration)(implicitpermit:scala.concurrent.CanAwait):Awaitable.this.type", "kind" : "abstract def"}], "shortDescription" : "A staged future represents both asynchronous acceptance and asynchronousfulfilment of a piece of work.", "object" : "net\/gfxmonk\/sequentialstate\/StagedFuture$.html", "members_object" : [{"label" : "apply", "tail" : "(body: ⇒ T)(ec: ExecutionContext): StagedFuture[T]", "member" : "net.gfxmonk.sequentialstate.StagedFuture.apply", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture$.html#apply[T](body:=>T)(implicitec:scala.concurrent.ExecutionContext):net.gfxmonk.sequentialstate.StagedFuture[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(future: Future[Future[A]]): StagedFuture[A]", "member" : "net.gfxmonk.sequentialstate.StagedFuture.apply", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture$.html#apply[A](future:scala.concurrent.Future[scala.concurrent.Future[A]]):net.gfxmonk.sequentialstate.StagedFuture[A]", "kind" : "def"}, {"label" : "accepted", "tail" : "(future: Future[A]): StagedFuture[A]", "member" : "net.gfxmonk.sequentialstate.StagedFuture.accepted", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture$.html#accepted[A](future:scala.concurrent.Future[A]):net.gfxmonk.sequentialstate.StagedFuture[A]", "kind" : "def"}, {"label" : "successful", "tail" : "(value: A): StagedFuture[A]", "member" : "net.gfxmonk.sequentialstate.StagedFuture.successful", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture$.html#successful[A](value:A):net.gfxmonk.sequentialstate.StagedFuture[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "net\/gfxmonk\/sequentialstate\/StagedFuture$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "net\/gfxmonk\/sequentialstate\/StagedFuture.html", "kind" : "trait"}, {"name" : "net.gfxmonk.sequentialstate.UnitOfWork", "members_trait" : [{"label" : "run", "tail" : "(): Option[Future[_]]", "member" : "net.gfxmonk.sequentialstate.UnitOfWork.run", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork.html#run():Option[scala.concurrent.Future[_]]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "reportFailure", "tail" : "(error: Throwable): Option[Future[_]]", "member" : "net.gfxmonk.sequentialstate.UnitOfWork.reportFailure", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork.html#reportFailure(error:Throwable):Option[scala.concurrent.Future[_]]", "kind" : "abstract def"}, {"label" : "reportSuccess", "tail" : "(result: A): Option[Future[_]]", "member" : "net.gfxmonk.sequentialstate.UnitOfWork.reportSuccess", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork.html#reportSuccess(result:A):Option[scala.concurrent.Future[_]]", "kind" : "abstract def"}, {"label" : "enqueuedAsync", "tail" : "(): Unit", "member" : "net.gfxmonk.sequentialstate.UnitOfWork.enqueuedAsync", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork.html#enqueuedAsync():Unit", "kind" : "abstract def"}, {"label" : "fn", "tail" : ": () ⇒ A", "member" : "net.gfxmonk.sequentialstate.UnitOfWork.fn", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork.html#fn:()=>A", "kind" : "abstract val"}], "shortDescription" : "", "object" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html", "members_object" : [{"label" : "EnqueueOnlyAsync", "tail" : "", "member" : "net.gfxmonk.sequentialstate.UnitOfWork.EnqueueOnlyAsync", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#EnqueueOnlyAsync[A]extendsUnitOfWork[scala.concurrent.Future[A]]withUnitOfWork.HasEnqueuePromise[Unit]withUnitOfWork.IsEnqueueOnlywithProductwithSerializable", "kind" : "case class"}, {"label" : "EnqueueOnlyStaged", "tail" : "", "member" : "net.gfxmonk.sequentialstate.UnitOfWork.EnqueueOnlyStaged", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#EnqueueOnlyStaged[A]extendsUnitOfWork[net.gfxmonk.sequentialstate.StagedFuture[A]]withUnitOfWork.HasEnqueuePromise[Unit]withUnitOfWork.IsEnqueueOnlywithProductwithSerializable", "kind" : "case class"}, {"label" : "EnqueueOnly", "tail" : "", "member" : "net.gfxmonk.sequentialstate.UnitOfWork.EnqueueOnly", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#EnqueueOnly[A]extendsUnitOfWork[A]withUnitOfWork.HasEnqueuePromise[Unit]withUnitOfWork.IsEnqueueOnlywithUnitOfWork.IgnoresResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "IsEnqueueOnly", "tail" : "", "member" : "net.gfxmonk.sequentialstate.UnitOfWork.IsEnqueueOnly", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#IsEnqueueOnlyextendsAnyRef", "kind" : "trait"}, {"label" : "FullAsync", "tail" : "", "member" : "net.gfxmonk.sequentialstate.UnitOfWork.FullAsync", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#FullAsync[A]extendsUnitOfWork[scala.concurrent.Future[A]]withUnitOfWork.HasExecutionContextwithUnitOfWork.HasEnqueuePromise[scala.concurrent.Future[A]]withUnitOfWork.HasResultPromise[A]withUnitOfWork.HasEnqueueAndResultPromise[A]withUnitOfWork.HasFutureResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "FullStaged", "tail" : "", "member" : "net.gfxmonk.sequentialstate.UnitOfWork.FullStaged", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#FullStaged[A]extendsUnitOfWork[net.gfxmonk.sequentialstate.StagedFuture[A]]withUnitOfWork.HasExecutionContextwithUnitOfWork.HasEnqueuePromise[scala.concurrent.Future[A]]withUnitOfWork.HasResultPromise[A]withUnitOfWork.HasEnqueueAndResultPromise[A]withUnitOfWork.HasStagedResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "HasFutureResult", "tail" : "", "member" : "net.gfxmonk.sequentialstate.UnitOfWork.HasFutureResult", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#HasFutureResult[A]extendsAnyRef", "kind" : "trait"}, {"label" : "HasStagedResult", "tail" : "", "member" : "net.gfxmonk.sequentialstate.UnitOfWork.HasStagedResult", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#HasStagedResult[A]extendsAnyRef", "kind" : "trait"}, {"label" : "Full", "tail" : "", "member" : "net.gfxmonk.sequentialstate.UnitOfWork.Full", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#Full[A]extendsUnitOfWork[A]withUnitOfWork.HasEnqueuePromise[scala.concurrent.Future[A]]withUnitOfWork.HasResultPromise[A]withUnitOfWork.HasSyncResult[A]withUnitOfWork.HasEnqueueAndResultPromise[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "HasEnqueueAndResultPromise", "tail" : "", "member" : "net.gfxmonk.sequentialstate.UnitOfWork.HasEnqueueAndResultPromise", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#HasEnqueueAndResultPromise[A]extendsAnyRef", "kind" : "trait"}, {"label" : "HasSyncResult", "tail" : "", "member" : "net.gfxmonk.sequentialstate.UnitOfWork.HasSyncResult", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#HasSyncResult[A]extendsAnyRef", "kind" : "trait"}, {"label" : "HasResultPromise", "tail" : "", "member" : "net.gfxmonk.sequentialstate.UnitOfWork.HasResultPromise", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#HasResultPromise[A]extendsAnyRef", "kind" : "trait"}, {"label" : "HasEnqueuePromise", "tail" : "", "member" : "net.gfxmonk.sequentialstate.UnitOfWork.HasEnqueuePromise", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#HasEnqueuePromise[A]extendsAnyRef", "kind" : "trait"}, {"label" : "IgnoresResult", "tail" : "", "member" : "net.gfxmonk.sequentialstate.UnitOfWork.IgnoresResult", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#IgnoresResult[A]extendsAnyRef", "kind" : "trait"}, {"label" : "HasExecutionContext", "tail" : "", "member" : "net.gfxmonk.sequentialstate.UnitOfWork.HasExecutionContext", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#HasExecutionContextextendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "net\/gfxmonk\/sequentialstate\/UnitOfWork$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "net\/gfxmonk\/sequentialstate\/UnitOfWork.html", "kind" : "trait"}], "net.gfxmonk.sequentialstate.staged" : [{"name" : "net.gfxmonk.sequentialstate.staged.StagedFutureExt", "shortDescription" : "", "members_class" : [{"label" : "flatMapStaged", "tail" : "(fn: Function[T, StagedFuture[U]])(ec: ExecutionContext): StagedFuture[U]", "member" : "net.gfxmonk.sequentialstate.staged.StagedFutureExt.flatMapStaged", "link" : "net\/gfxmonk\/sequentialstate\/staged\/package$$StagedFutureExt.html#flatMapStaged[U](fn:Function[T,net.gfxmonk.sequentialstate.StagedFuture[U]])(implicitec:scala.concurrent.ExecutionContext):net.gfxmonk.sequentialstate.StagedFuture[U]", "kind" : "def"}, {"member" : "net.gfxmonk.sequentialstate.staged.StagedFutureExt#<init>", "error" : "unsupported entity"}, {"label" : "f", "tail" : ": Future[T]", "member" : "net.gfxmonk.sequentialstate.staged.StagedFutureExt.f", "link" : "net\/gfxmonk\/sequentialstate\/staged\/package$$StagedFutureExt.html#f:scala.concurrent.Future[T]", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "net\/gfxmonk\/sequentialstate\/staged\/package$$StagedFutureExt.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "net\/gfxmonk\/sequentialstate\/staged\/package$$StagedFutureExt.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "net\/gfxmonk\/sequentialstate\/staged\/package$$StagedFutureExt.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "net\/gfxmonk\/sequentialstate\/staged\/package$$StagedFutureExt.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "net\/gfxmonk\/sequentialstate\/staged\/package$$StagedFutureExt.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "net\/gfxmonk\/sequentialstate\/staged\/package$$StagedFutureExt.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "net\/gfxmonk\/sequentialstate\/staged\/package$$StagedFutureExt.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "net\/gfxmonk\/sequentialstate\/staged\/package$$StagedFutureExt.html", "kind" : "class"}]};